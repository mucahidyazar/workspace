---
title: Create a multi-language Gatsby Site or Blog
date: '2017-10-27'
layout: post
draft: false
tags:
  - Gatsby
  - React
  - Graphql
  - JavaScript
structuredData:
  version: 1
  dateCreated: '2017-10-27'
  dateModified: '2017-10-27'
  datePublished: '2017-10-27'  
  locationCreated: Ottawa CA
  alternativeHeadline: Hot to create a multi-language Gatsby web site or blog with react and graphql
  type: TechArticle
  dependencies: Basic Javascript and React
  proficiencyLevel: Beginner
  articleSection: static-site
  pageEnd:
  pageStart:
  pagination:
  about:
    name: Gatsby
    alternateName: Gatsby i18n
    description: Gatsby lets you build blazing-fast sites with your data, whatever the source. Liberate your sites from legacy CMSs and fly into the future.
    identifier: gatsbyJs
    image:
    sameAs: https://www.gatsbyjs.org/
  accessMode: textual
  accessModeSufficient: textual
  accessibilityAPI: ARIA
  accessibilityControl: fullKeyboardControl, fullTouchControl, fullMouseControl
  accessibilitySummary:
  aggregateRating: ...
  audience: ...
  author: angeloocana
  comment: ...
  commentCount: ...
  contentLocation: ...  
  discussionUrl: ...
  educationalUse: ...    
  isAccessibleForFree: true
  isFamilyFriendly: true
  keywords: ...  
  thumbnailUrl: ...  
  video: ...
---

Learn how to create a modern i18n (multi-language) website or blog using JavaScript, React and GraphQl. It'll be easy, you are going to enjoy Gatsby.

- [First: Why Gatsby?](#first-why-gatsby)
- [Second: Why i18n?](#second-why-i18n)
- [Install Gatsby cli](#install-gatsby-cli)
- [Create the Project](#create-the-project)
- [Add gatsby-plugin-i18n](#add-gatsby-plugin-i18n)
- [Create pages](#create-pages)
- [Create menu](#create-menu)
- [Redirect to user language](#redirect-to-user-language)
- [Add Blog and Markdown](#add-blog-and-markdown)
- [Add Read Next](#add-read-next)

## First: Why Gatsby?

From
<a href="https://www.gatsbyjs.org/" target="_blank">
Gatsby website:
</a>

### Scale to the entire internet

Gatsby.js builds the fastest possible website. Instead of waiting to generate pages when requested, pre-build pages and lift them into a global cloud of servers — ready to be delivered instantly to your users wherever they are.

### Modern web tech without the headache

Enjoy the power of the latest web technologies – React.js, Webpack, modern JavaScript and CSS and more — all setup and waiting for you to start building.


### Static Progressive Web Apps

Gatsby.js is a static PWA (Progressive Web App) generator. You get code and data splitting out-of-the-box. Gatsby loads only the critical HTML, CSS, data, and JavaScript so your site loads as fast as possible. Once loaded, Gatsby prefetches resources for other pages so clicking around the site feels incredibly fast.

### Bring your own data

Gatsby’s rich data plugin ecosystem lets you build sites with the data you want — from one or many sources: Pull data from headless CMSs, SaaS services, APIs, databases, your file system & more directly into your pages using GraphQL .


## Second: Why i18n?

i18n is the global term used to describe multi-language sites, blogs, programs, and so on.

It's almost impossible to add i18n to any project already done without a complete rewrite.

> Trust me, You should always start a multi-language project, even if you are using just one language.

You will have all your texts centralized. If you change one msg, it is going to be changed everywhere, you don't need to search all your site looking for that msg.

> Build your application thinking in the future and worldwide.

Let's start coding!


## Install Gatsby cli

To start you need [npm](https://www.npmjs.com/get-npm) and [yarn](https://yarnpkg.com/lang/en/docs/install/) installed.

You don't really need **yarn**, you can just work with **npm**, but I think **yarn** is faster and less buggy.

```bash
  yarn add gatsby-cli --global
```

[More info from Gatsby docs](https://www.gatsbyjs.org/docs/)


## Create The Project

Open the console in the folder where your project is going to live and run the command below.

```bash
  gatsby new my-i18n-site
```
Replace **my-i18n-site** with your project name.

To run the project, go to your new project folder and execute in the console:

```bash
  gatsby develop
```

Open your browser at `http://localhost:8000/`
If you can see a page, congratulations! It's everything alright. =D

Navigate throw the code, make some changes and see the browser automatically reloading the page with the new changes. Isn't it awesome?


## Add gatsby-plugin-i18n

Checkout [gatsby-plugin-i18n](https://github.com/angeloocana/gatsby-plugin-i18n) Github page and **like** it if you like. =D

Add the plugin to your project:
```bash
  yarn add gatsby-plugin-i18n
```

Now open the file `gatsby-config.js` and add the code below to the end:

```js
plugins: [
  // Others plugins...,
  {
      resolve: 'gatsby-plugin-i18n',
      options: {        
        langKeyDefault: 'en',
        useLangKeyLayout: false
      }
    }
]
```


## Create pages

Now let's create one home page for English and another for Portuguese.

English: `src/pages/index.en.js`
```js
  import React from 'react'
  import Link from 'gatsby-link'

  const IndexPage = () => (
    <div>
      <h1>en Home</h1>
      <Link to="/pt/">pt</Link>
    </div>
  )

  export default IndexPage
```

Portuguese: `src/pages/index.pt.js`
```js
  import React from 'react'
  import Link from 'gatsby-link'

  const IndexPage = () => (
    <div>
      <h1>pt Home</h1>
      <Link to="/en/">en</Link>
    </div>
  )

  export default IndexPage
```

Run the project `gatsby develop` and you can see the pages at:

English: http://localhost:8000/en/

Portuguese: http://localhost:8000/pt/

I think you got how it works, just add **.lanKey**.js to the name of the file and the URL will be /**langKey**/...

## Create menu


## Redirect to user language


## Add Blog and Markdown


## Add Read Next

